extends Node
const tile_dec = {
	"0": -1,
	"2K": 1,
	"2L": 2,
	"2M": 3,
	"2N": 4,
	"2O": 5,
	"2P": 6,
	"2Q": 7,
	"2R": 8,
	"2S": 9,
	"2T": 10,
	"2U": 11,
	"2V": 12,
	"2W": 13,
	"2X": 14,
	"2Y": 15,
	"2Z": 16,
	"2[": 17,
	"2\\": 18,
	"2]": 19,
	"2^": 20,
	"2_": 21,
	"2`": 22,
	"2a": 23,
	"2b": 24,
	"2c": 25,
	"2d": 26,
	"2e": 27,
	"2f": 28,
	"2g": 29,
	"2h": 30,
	"2i": 31,
	"2j": 32,
	"2k": 33,
	"2l": 34,
	"2m": 35,
	"2n": 36,
	"2o": 37,
	"2p": 38,
	"2q": 39,
	"2r": 40,
	"2s": 41,
	"2t": 42,
	"2u": 43,
	"2v": 44,
	"2w": 45,
	"32": 46,
	"33": 47,
	"34": 48,
	"35": 49,
	"36": 50,
	"37": 51,
	"38": 52,
	"39": 53,
	"3:": 54,
	"3;": 55,
	"3<": 56,
	"3=": 57,
	"3>": 58,
	"3?": 59,
	"3@": 60,
	"3A": 61,
	"3B": 62,
	"3C": 63,
	"3D": 64,
	"3E": 65,
	"3F": 66,
	"3G": 67,
	"3H": 68,
	"3I": 69,
	"3J": 70,
	"3K": 71,
	"3L": 72,
	"3M": 73,
	"3N": 74,
	"3O": 75,
	"3P": 76,
	"3Q": 77,
	"3d": 78,
	"3e": 79,
	"3f": 80,
	"3g": 81,
	"3h": 82,
	"3i": 83,
	"3j": 84,
	"3k": 85,
	"3l": 86,
	"3m": 87,
	"3n": 88,
	"3o": 89,
	"3p": 90,
	"3q": 91,
	"3r": 92,
	"3s": 93,
	"3t": 94,
	"3u": 95,
	"3v": 96,
	"3w": 97,
	"3x": 98,
	"3y": 99,
	"3z": 100,
	"3{": 101,
	"41": 102,
	"42": 103,
	"43": 104,
	"44": 105,
	"45": 106,
	"46": 107,
	"47": 108,
	"48": 109,
	"49": 110,
	"4:": 111,
	"4;": 112,
	"4<": 113,
	"4=": 114,
	"4>": 115,
	"4?": 116,
	"4@": 117,
	"4A": 118,
	"4B": 119,
	"4C": 120,
	"4D": 121,
	"4E": 122,
	"4F": 123,
	"4G": 124,
	"4H": 125,
	"4I": 126,
	"4J": 127,
	"4K": 128,
	"4L": 129,
	"4M": 130,
	"4N": 131,
	"4O": 132,
	"4P": 133,
	"4Q": 134,
	"4R": 135,
	"4S": 136,
	"4T": 137,
	"4U": 138,
	"4V": 139,
	"4W": 140,
	"4X": 141,
	"4Y": 142,
	"4Z": 143,
	"4[": 144,
	"4\\": 145,
	"4]": 146,
	"4^": 147,
	"4_": 148,
	"4`": 149,
	"4a": 150,
	"4b": 151,
	"4c": 152,
	"4d": 153,
	"4e": 154,
	"4f": 155,
	"4g": 156,
	"4h": 157,
	"4i": 158,
	"4j": 159,
	"4k": 160,
	"4l": 161,
	"4m": 162,
	"4n": 163,
	"4o": 164,
	"4p": 165,
	"4q": 166,
	"4r": 167,
	"4s": 168,
	"4t": 169,
	"4u": 170,
	"4v": 171,
	"4w": 172,
	"4x": 173,
	"4y": 174,
	"4z": 175,
	"52": 176,
	"53": 177,
	"54": 178,
	"55": 179,
	"56": 180,
	"57": 181,
	"58": 182,
	"59": 183,
	"5:": 184,
	"5;": 185,
	"5<": 186,
	"5=": 187,
	"5>": 188,
	"5?": 189,
	"5@": 190,
	"5A": 191,
	"5B": 192,
	"5C": 193,
	"5D": 194,
	"5E": 195,
	"5F": 196,
	"5G": 197,
	"5H": 198,
	"5I": 199,
	"5J": 200,
	"5K": 201,
	"5L": 202,
	"5M": 203,
	"5N": 204,
	"5O": 205,
	"5P": 206,
	"5Q": 207,
	"5R": 208,
	"5S": 209,
	"5T": 210,
	"5U": 211,
	"5V": 212,
	"5W": 213,
	"5X": 214,
	"5Y": 215,
	"5Z": 216,
	"5[": 217,
	"5\\": 218,
	"5]": 219,
	"5^": 220,
	"5d": 221,
	"5e": 222,
	"5f": 223,
	"5g": 224,
	"5h": 225,
	"5i": 226,
	"5j": 227,
	"5k": 228,
	"5l": 229,
	"5m": 230,
	"5n": 231,
	"5o": 232,
	"5p": 233,
	"5q": 234,
	"5r": 235,
	"5s": 236,
	"5t": 237,
	"5u": 238,
	"5v": 239,
	"5w": 240,
	"5x": 241,
	"5y": 242,
	"5z": 243,
	"5{": 244,
	"61": 245,
	"62": 246,
	"63": 247,
	"64": 248,
	"65": 249,
	"66": 250,
	"67": 251,
	"68": 252,
	"69": 253,
	"6:": 254,
	"6;": 255,
	"6<": 256,
	"6=": 257,
	"6>": 258,
	"6?": 259,
	"6@": 260,
	"6A": 261,
	"6B": 262,
	"6C": 263,
	"6D": 264,
	"6E": 265,
	"6F": 266,
	"6G": 267,
	"6K": 268,
	"6L": 269,
	"6M": 270,
	"6N": 271,
	"6O": 272,
	"6P": 273,
	"6Q": 274,
	"6R": 275,
	"6S": 276,
	"6T": 277,
	"6U": 278,
	"6V": 279,
	"6W": 280,
	"6X": 281,
	"6Y": 282,
	"6Z": 283,
	"6[": 284,
	"6\\": 285,
	"6]": 286,
	"6^": 287,
	"6_": 288,
	"6`": 289,
	"6a": 290,
	"6b": 291,
	"6c": 292,
	"6d": 293,
	"6e": 294,
	"6f": 295,
	"6g": 296,
	"6h": 297,
	"6i": 298,
	"6j": 299,
	"6k": 300,
	"6l": 301,
	"6m": 302,
	"6n": 303,
	"6o": 304,
	"6p": 305,
	"6q": 306,
	"6r": 307,
	"6s": 308,
	"6t": 309,
	"6u": 310,
	"6v": 311,
	"72": 312,
	"73": 313,
	"74": 314,
	"75": 315,
	"76": 316,
	"77": 317,
	"78": 318,
	"79": 319,
	"7:": 320,
	"7;": 321,
	"7<": 322,
	"7=": 323,
	"7>": 324,
	"7?": 325,
	"7@": 326,
	"7A": 327,
	"7B": 328,
	"7C": 329,
	"7D": 330,
	"7E": 331,
	"7F": 332,
	"7G": 333,
	"7H": 334,
	"7I": 335,
	"7J": 336,
	"7K": 337,
	"7L": 338,
	"7M": 339,
	"7N": 340,
	"7O": 341,
	"7P": 342,
	"7Q": 343,
	"7R": 344,
	"7S": 345,
	"7T": 346,
	"7U": 347,
	"7V": 348,
	"7W": 349,
	"7X": 350,
	"7Y": 351,
	"7Z": 352,
	"7d": 353,
	"7e": 354,
	"7f": 355,
	"7g": 356,
	"7h": 357,
	"7i": 358,
	"7j": 359,
	"7k": 360,
	"7l": 361,
	"7m": 362,
	"7n": 363,
	"7o": 364,
	"7p": 365,
	"7q": 366,
	"7r": 367,
	"7s": 368,
	"7t": 369,
	"7u": 370,
	"7v": 371,
	"7w": 372,
	"7x": 373,
	"7y": 374,
	"7z": 375,
	"7{": 376,
	"81": 377,
	"82": 378,
	"83": 379,
	"84": 380,
	"85": 381,
	"86": 382,
	"87": 383,
	"88": 384,
	"89": 385,
	"8:": 386,
	"8;": 387,
	"8<": 388,
	"8=": 389,
	"8>": 390,
	"8?": 391,
	"8@": 392,
	"8A": 393,
	"8B": 394,
	"8C": 395,
	"8D": 396,
	"8E": 397,
	"8F": 398,
	"8G": 399,
	"8H": 400,
	"8I": 401,
	"8K": 402,
	"8L": 403,
	"8M": 404,
	"8N": 405,
	"8O": 406,
	"8P": 407,
	"8Q": 408,
	"8R": 409,
	"8S": 410,
	"8T": 411,
	"8U": 412,
	"8V": 413,
	"8W": 414,
	"8X": 415,
	"8Y": 416,
	"8Z": 417,
	"8[": 418,
	"8\\": 419,
	"8]": 420,
	"8^": 421,
	"8_": 422,
	"8`": 423,
	"8a": 424,
	"8b": 425,
	"8c": 426,
	"8d": 427,
	"8e": 428,
	"8f": 429,
	"8g": 430,
	"8h": 431,
	"8i": 432,
	"8j": 433,
	"8k": 434,
	"8l": 435,
	"8m": 436,
	"8n": 437,
	"8o": 438,
	"8p": 439,
	"8q": 440,
	"8r": 441,
	"8s": 442,
	"8t": 443,
	"8u": 444,
	"8v": 445,
	"8w": 446,
	"8x": 447,
	"8y": 448,
	"8z": 449,
	"92": 450,
	"93": 451,
	"94": 452,
	"95": 453,
	"96": 454,
	"97": 455,
	"98": 456,
	"99": 457,
	"9:": 458,
	"9;": 459,
	"9<": 460,
	"9=": 461,
	"9>": 462,
	"9?": 463,
	"9@": 464,
	"9A": 465,
	"9B": 466,
	"9C": 467,
	"9D": 468,
	"9E": 469,
	"9F": 470,
	"9G": 471,
	"9H": 472,
	"9I": 473,
	"9J": 474,
	"9K": 475,
	"9L": 476,
	"9M": 477,
	"9N": 478,
	"9O": 479,
	"9P": 480,
	"9Q": 481,
	"9R": 482,
	"9S": 483,
	"9T": 484,
	"9U": 485,
	"9V": 486,
	"9W": 487,
	"9X": 488,
	"9Y": 489,
	"9Z": 490,
	"9[": 491,
	"9\\": 492,
	"9]": 493,
	"9^": 494,
	"9_": 495,
	"9`": 496,
	"9a": 497,
	"9b": 498,
	"9c": 499,
	"9d": 500,
	"9e": 501,
	"9f": 502,
	"9g": 503,
	"9h": 504,
	"9i": 505,
	"9j": 506,
	"9k": 507,
	"9l": 508,
	"9m": 509,
	"9n": 510,
	"9o": 511,
	"9p": 512,
	"9q": 513,
	"9r": 514,
	"9s": 515,
	"9t": 516,
	"9u": 517,
	"9v": 518,
	"9w": 519,
	"9x": 520,
	"9y": 521,
	"9z": 522,
	"9{": 523,
	":1": 524,
	":2": 525,
	":3": 526,
	":4": 527,
	":5": 528,
	":6": 529,
	":7": 530,
	":8": 531,
	":9": 532,
	"::": 533,
	":;": 534,
	":<": 535,
	":=": 536,
	":>": 537,
	":?": 538,
	":@": 539,
	":A": 540,
	":B": 541,
	":C": 542,
	":D": 543,
	":E": 544,
	":F": 545,
	":G": 546,
	":H": 547,
	":I": 548,
	":J": 549,
	":K": 550,
	":L": 551,
	":M": 552,
	":N": 553,
	":O": 554,
	":P": 555,
	":Q": 556,
	":R": 557,
	":S": 558,
	":T": 559,
	":U": 560,
	":V": 561,
	":W": 562,
	":X": 563,
	":Y": 564,
	":Z": 565,
	":[": 566,
	":\\": 567,
	":]": 568,
	":^": 569,
	":_": 570,
	":`": 571,
	":a": 572,
	":b": 573,
	":c": 574,
	":d": 575,
	":e": 576,
	":f": 577,
	":g": 578,
	":h": 579,
	":i": 580,
	":j": 581,
	":k": 582,
	":l": 583,
	":m": 584,
	":n": 585,
	":o": 586,
	":p": 587,
	":q": 588,
	":r": 589,
	":s": 590,
	":t": 591,
	":u": 592,
	":v": 593,
}
#var levelCode = "100x30~4T*67*924T*8*924T*15*0*6*4T0*8*924T4V0*5*4U4T0*3*4T*2*0*15*924T4V0*5*4U4T0*3*4T*2*0*15*4T*2*4V0*5*4U4T0*3*4T*2*0*6*4T0*3*930*4*4T*2*4V0*5*4U4T0*3*4T*2*0*6*4T*5*0*4*4T*2*4V0*5*934T0*3*4T*2*0*6*4T0*8*4T*2*4V0*5*4U4T0*3*4T*2*0*6*4T0*8*4T*2*4V0*5*4U4T0*3*4T*2*0*6*4T0*5*4T0*2*4T*2*4V0*5*4U4T0*3*4T*2*0*6*4T0*5*4T0*2*4T*2*4V0*5*4U4T0*3*4T*2*0*6*4T0*4*4X4T0*2*4T*2*4V0*4*4U4T*7*0*10*4X4T*2*0*2*4T*2*4V0*4*4U4V0*4*4T*2*0*9*4X4T*3*4V0924T4V0*4*934T*7*0*8*4X4T*4*4V0*2*4L4V0*6*4U4T04L4T*2*0*7*4X4T*5*4V0*2*4L4V0*6*4U4T04L4T*2*0*6*4X4T*6*4V0*2*4L4V0*9*4L4T*2*0*6*4T*7*4V0*2*4L4V0*9*4L4T*2*0*6*4T*7*4V0*2*4L4V0*9*4L4T*2*0*6*4T*7*4V0*2*4L4V0*8*4U4T*3*0*6*4T*7*4V0924T4V0*9*4T*8*0*3*4L0*6*4T*9*04T*10*04T*3*0*6*4V0*9*4T*10*0*3*4L0*16*4V0*2*4T*6*0*2*4T*3*0*16*8Z0*2*4T*6*0*2*924T*2*0*16*8Z0*2*4T*6*0*4*4L0*16*4V0*2*4T*6*0*4*4L0*16*4V0*2*4T*6*0*4*4L0*16*4V0*2*4T*6*0*4*4L0*16*4V0*2*4T*6*0*4*4L0*6*4T*9*04T*9*0*2*924T*2*0*6*924T*7*0*2*4T*7*0*4*4T*3*0*6*4V0*6*4U0*2*4T*7*0*4*4T*3*0*13*4U0*4*4L4T*4*0*4*924T*2*0*18*4L4T*4*0*6*4L0*16*4T*7*0*6*4L0*16*4T*7*0*6*4L0*18*4L4T*4*0*6*4L0*18*4L4T*4*0*6*4L0*18*4L4T*4*0*6*4L0*6*924T*8*04T*7*0*6*4L0*6*4V0*11*4L4T*4*0*6*4L0*16*4T*7*0*4*924T*2*0*16*4V0*2*4T*4*0*4*4T*3*0*16*4V0*2*4T*4*0*4*924T*2*0*16*924T*5*4V0*6*4L0*18*4L4T*3*4V0*6*4L0*6*924T*4*0*3*4T*8*4V0*6*4L0*6*4V0*11*4L4T*3*4V0*6*4L0*18*4L4T*3*4V0*6*4L0*16*924T*5*4V0*6*4L0*16*4T*6*4V0*6*4L0*15*4X4T*6*4V0*6*4L0*6*924T*3*0*4*4X4T*7*4V0*6*4L0*6*4T*4*0*3*4X4T*8*4V0*6*4L0*6*4T*4*0*3*4T*10*0*4*924T*2*0*5*4U4T4V0*5*4T0*5*4T*4*0*4*4T*3*0*5*4U4T4V0*5*4T*10*0*4*4T*3*0*11*4U4T*2*0*5*4T*4*0*4*4T*3*0*11*4U4T*11*0*4*4T*3*0*9*4T*3*4V0*6*4T*4*0*4*4T*3*0*9*4T*14*0*4*4T*15*4V0*6*4T*4*0*4*4T*26*0*8*4V0*7*4V0*8*4L4T*4*0*23*4U04L4T*4*0*6*4V0*6*4V0*11*4L4T*4*0*20*4U0*4*4L4T*4*0*9*4V0*15*4L4T*4*0*25*4L4T*4*0*12*4V0*12*4L4T*4*0*17*4U0*7*4L4T*4*0*8*4V0*13*4V0*2*4L4T*4*0*15*4V0*9*4L4T*24*0*5*4L4T*25*0*4*4L4T*25*0*4*4L4T*25*0*4*4L4T*25*0*4*4L4T*25*0*3*4T*2*0*15*4T*6*0*7*4T*2*0*15*4T*6*0*7*4T*2*0*15*4T*6*0*6*4X4T*2*0*15*4T*6*0*6*4T*3*0*15*4T*6*0*6*4T*3*0*15*4T*6*0*6*4T*3*0*15*4T*6*0*6*4W4T*2*0*15*4T*6*0*7*4T*2*0*15*4T*6*0*7*4T*2*0*15*4T*15*0*15*4T*15*0*15*4T*15*0*15*4T*15*0*15*4T*15*0*15*4T*15*0*15*4T*15*0*15*4T*15*0*15*4T*15*0*15*4T*15*";
var levelCode = "400x20~0*15*2K2O2M2K2M0*15*2K2M*2*2K2M0*15*2T2Z2\\2K2M0*17*2T2K2M0*18*2K2M0*18*2K2M0*12*9<98*5*2K2M0*12*9;9:*2*97*3*2K2M0*11*9<9;97*3*9:972K2M0*11*9;9=99*5*2K2M0*11*9;9:*2*97*4*2K2M0*11*9=99*6*2K2M0*18*2K2M0*17*2W2K2M0*17*2a2K2M0*16*2e2g2K2M0*16*2X2Z2K2r0*18*2T2p0*252*2S2Y*7*0*12*2K2M2O2M*5*0*7*9<98*4*2K2M2r2Z*2*2^2`2M0*7*9;9:9<98*2*2K2M2o0*2*2L2N2O0*7*9;979;9:972K2M2o0*2*2L2N2M0*7*9=999=99*2*2K2M2s2Y2q2f2h2M0*12*2b2M*3*2o02K2M0*12*2V2Z*3*2p02T2\\0*19*2K0*19*2K0*19*2K0*14*2S2Y*4*2[0*13*2e2g2M*5*0*13*2a2m2M2O2M*3*0*13*2K2M*6*0*13*2K2M*6*0*13*2K2M*6*0*13*2K2M*3*2P2M*2*0*13*2K2M*4*2P2M0*13*2K2M*6*0*13*2K2M*6*0*13*2K2M*6*0*13*2K2M*6*0*13*2K2M*6*0*13*2K2M*6*0*13*2K2M2O2M*4*0*13*2K2M*6*0*13*2K2M*6*0*13*2b2n2M*3*2P2M0*13*2f2h2M*3*2P2M0*14*2K2M*4*2r0*14*2T2Z*4*2p0*232*2W2Y*7*0*12*2a2m2M*6*0*8*9<98*3*2K2M2O2M*5*0*8*9;9:*2*972K2M*7*0*8*9;9:*2*972K2M*7*0*8*9=99*3*2K2M*4*2P2M*2*0*12*2b2n2M*6*0*12*2f2h2\\2M*5*0*13*2T2K2M*5*0*14*2K2M*5*0*14*2K2M*2*2O2M*2*0*14*2b2M*5*0*14*2V2Z*5*0*193*2S2Y*6*0*13*2K2M*6*0*13*2T2Z*6*0*198*2S2Y0*17*2e2g2M0*17*2c2m2O0*17*2K2M*2*0*17*2K2M*2*0*14*9<98*2*2K2M*2*0*12*9<989;9:972K2P2M0*12*9;9:9;9:972K2M*2*0*12*9;9:9=99*2*2K2M*2*0*12*9;97*2*9;972K2M*2*0*12*9;97*2*9;972K2M*2*0*12*9;97*2*9;972K2M*2*0*12*9;9:9<98*2*2K2M*2*0*12*9;9:9;9:972K2M*2*0*12*9=999;9:972K2M*2*0*14*9=99*2*2K2M*2*0*17*2K2M*2*0*17*2T2Z*2*0*275*2S2Y*4*0*15*2b2n2O2M*2*0*15*2f2h2M*3*0*16*2b2n2M*2*0*16*2j2l2P2M0*14*9<98*2*2K2M*2*0*14*9;9:972K2M*2*0*14*9;97*2*2K2M*2*0*14*9;97*2*2b2n2P0*14*9;9:972f2h2M0*14*9=99*3*2K2M0*18*2T2Z0*18*5:5@0*18*52540*18*52540*18*52540*18*52540*18*52540*18*52540*18*52540*18*52540*18*52540*18*5;5A0*97*5>5@*2*0*17*5355540*17*5355540*17*5M5O540*18*52540*18*5;5A0*56*5:5@*3*0*16*5254*3*0*16*5254*3*0*16*5254*3*0*16*5;5A*3*0*314*585@*5*0*14*5254*5*0*14*5254*5*0*14*5254*5*0*14*5;5A*5*0*73*320*395*5:5@*10*0*9*5254*10*0*9*5254*10*0*9*5254*10*0*9*5;5C54*9*0*10*5;5C54*8*0*11*5;5A5C54*6*0*13*5254*6*0*13*5254*6*0*13*5254*6*0*13*5254*6*0*13*5254*6*0*13*5254*6*0*13*5254*6*0*13*5254*6*0*13*5254*6*0*13*5254*6*0*13*5254*6*0*13*5254*6*0*13*5254*6*0*13*5254*6*0*13*5I54*6*0*13*5M5O54*5*0*14*5I54*5*0*14*5?5A*5*0*152*5>5@*7*0*12*5H54*7*0*12*5254*7*0*12*5254*7*0*12*5254*4*5Y5U*2*0*12*5;5A*3*5U5W0*157*5>5@*4*0*15*5H54*4*0*15*5254*4*0*15*5254*4*0*15*5254*4*0*8*5:5@*6*5254*4*0*8*5254*6*5254*4*0*8*5254*6*5254*4*5f*87*635v*7*5d5f*11*610*7*5d5f*11*610*7*5d5f*11*610*7*5d5f*11*610*7*5d5f*11*610*7*5d5f*11*610*7*5d5f*11*610*7*5d5f*11*610*6*4v5d5f*11*610*7*5d5f*11*610*7*6B5v*4*5f*7*620*12*5f*7*620*12*5f*7*610*12*5f*7*610*12*5f*7*610*12*5f*7*610*12*5f*7*610*12*5f*7*610*12*5f*7*610*12*5f*7*610*6*5x5w*5*5f*7*610*6*5q5f*12*620*6*5d5f*12*610*6*5d5f*12*610*6*5d5f*12*610*6*5d5f*9*635v*2*670*6*6B5v*5*5f*4*610*15*5f*4*610*15*5f*4*610*15*5f*4*610*15*5f*4*610*15*5f*4*610*15*5f*4*610*3*5x5w*3*5{0*7*5f*4*610*3*5y5v*3*5z0*7*5f*4*610*15*5f*4*645{0*14*5f*5*610*14*5f*5*620*14*5f*5*620*14*5f*5*610*14*5f*5*610*14*5f*5*610*14*5f*5*610*14*5f*5*610*4*6:5w*9*5f*5*645{0*3*5q5f*15*610*3*5d5f*15*610*3*5d5f*15*610*3*5d5f*15*610*3*5d5f*15*610*3*5d5f*15*610*3*5d5f*15*610*3*5d5f*15*610*3*5d5f*15*610*3*5d5f*15*610*3*5d5f*15*610*3*5d5f*15*610*3*5p5f*9*5v*6*5z0*3*5r5f*9*0*11*5p5f*8*0*11*5r5d5f*7*0*12*5d5f*7*0*2*6:5{0*8*5d5f*7*0*2*5e645{0*5*6:6>5d5f*7*0*2*5e635z0*5*5e5f5d5f*7*0*2*5e610*6*5e5f5d5f*7*0*2*5e610*3*6:5w*2*665f5d5f*7*0*2*5e610*3*5i5f*4*5d5f*7*0*2*5e645w*3*5d5f*4*5d5f*7*0*2*5e5f*9*5d5f*7*0*2*5r5f*9*5d5f*7*0*3*5p5f*8*5d5f*7*0*3*5y5v*8*5d5f*7*5{0*11*5d5f*7*64680*10*5d5f*8*645w*6*5{0*3*5d5f*13*635v5z0*3*5h5f*13*610*5*695v*7*5f*6*610*13*5f*5*635z0*13*5f*5*610*14*5f*5*620*14*5f*5*610*14*5f*5*645{0*13*5f*6*645{0*12*5f*7*610*12*5f*7*610*12*5f*7*610*12*5f*7*610*12*5f*7*610*12*5f*7*610*12*5f*7*610*12*5f*7*610*12*5f*6*63670*12*5f*5*63670*13*5f*5*610*4*5x5w*9*5f*5*620*4*5e5g5f*13*620*4*5i5f*14*610*4*5d5f*14*645w*4*5d5f*19*5d5f*19*5d5f*9*0*580*";
#var levelCodeFull = "100x30~4T*67*924T*8*924T*15*0*6*4T0*8*924T4V0*5*4U4T0*3*4T*2*0*15*924T4V0*5*4U4T0*3*4T*2*0*15*4T*2*4V0*5*4U4T0*3*4T*2*0*6*4T0*3*930*4*4T*2*4V0*5*4U4T0*3*4T*2*0*6*4T*5*0*4*4T*2*4V0*5*934T0*3*4T*2*0*6*4T0*8*4T*2*4V0*5*4U4T0*3*4T*2*0*6*4T0*8*4T*2*4V0*5*4U4T0*3*4T*2*0*6*4T0*5*4T0*2*4T*2*4V0*5*4U4T0*3*4T*2*0*6*4T0*5*4T0*2*4T*2*4V0*5*4U4T0*3*4T*2*0*6*4T0*4*4X4T0*2*4T*2*4V0*4*4U4T*7*0*10*4X4T*2*0*2*4T*2*4V0*4*4U4V0*4*4T*2*0*9*4X4T*3*4V0924T4V0*4*934T*7*0*8*4X4T*4*4V0*2*4L4V0*6*4U4T04L4T*2*0*7*4X4T*5*4V0*2*4L4V0*6*4U4T04L4T*2*0*6*4X4T*6*4V0*2*4L4V0*9*4L4T*2*0*6*4T*7*4V0*2*4L4V0*9*4L4T*2*0*6*4T*7*4V0*2*4L4V0*9*4L4T*2*0*6*4T*7*4V0*2*4L4V0*8*4U4T*3*0*6*4T*7*4V0924T4V0*9*4T*8*0*3*4L0*6*4T*9*04T*10*04T*3*0*6*4V0*9*4T*10*0*3*4L0*16*4V0*2*4T*6*0*2*4T*3*0*16*8Z0*2*4T*6*0*2*924T*2*0*16*8Z0*2*4T*6*0*4*4L0*16*4V0*2*4T*6*0*4*4L0*16*4V0*2*4T*6*0*4*4L0*16*4V0*2*4T*6*0*4*4L0*16*4V0*2*4T*6*0*4*4L0*6*4T*9*04T*9*0*2*924T*2*0*6*924T*7*0*2*4T*7*0*4*4T*3*0*6*4V0*6*4U0*2*4T*7*0*4*4T*3*0*13*4U0*4*4L4T*4*0*4*924T*2*0*18*4L4T*4*0*6*4L0*16*4T*7*0*6*4L0*16*4T*7*0*6*4L0*18*4L4T*4*0*6*4L0*18*4L4T*4*0*6*4L0*18*4L4T*4*0*6*4L0*6*924T*8*04T*7*0*6*4L0*6*4V0*11*4L4T*4*0*6*4L0*16*4T*7*0*4*924T*2*0*16*4V0*2*4T*4*0*4*4T*3*0*16*4V0*2*4T*4*0*4*924T*2*0*16*924T*5*4V0*6*4L0*18*4L4T*3*4V0*6*4L0*6*924T*4*0*3*4T*8*4V0*6*4L0*6*4V0*11*4L4T*3*4V0*6*4L0*18*4L4T*3*4V0*6*4L0*16*924T*5*4V0*6*4L0*16*4T*6*4V0*6*4L0*15*4X4T*6*4V0*6*4L0*6*924T*3*0*4*4X4T*7*4V0*6*4L0*6*4T*4*0*3*4X4T*8*4V0*6*4L0*6*4T*4*0*3*4T*10*0*4*924T*2*0*5*4U4T4V0*5*4T0*5*4T*4*0*4*4T*3*0*5*4U4T4V0*5*4T*10*0*4*4T*3*0*11*4U4T*2*0*5*4T*4*0*4*4T*3*0*11*4U4T*11*0*4*4T*3*0*9*4T*3*4V0*6*4T*4*0*4*4T*3*0*9*4T*14*0*4*4T*15*4V0*6*4T*4*0*4*4T*26*0*8*4V0*7*4V0*8*4L4T*4*0*23*4U04L4T*4*0*6*4V0*6*4V0*11*4L4T*4*0*20*4U0*4*4L4T*4*0*9*4V0*15*4L4T*4*0*25*4L4T*4*0*12*4V0*12*4L4T*4*0*17*4U0*7*4L4T*4*0*8*4V0*13*4V0*2*4L4T*4*0*15*4V0*9*4L4T*24*0*5*4L4T*25*0*4*4L4T*25*0*4*4L4T*25*0*4*4L4T*25*0*4*4L4T*25*0*3*4T*2*0*15*4T*6*0*7*4T*2*0*15*4T*6*0*7*4T*2*0*15*4T*6*0*6*4X4T*2*0*15*4T*6*0*6*4T*3*0*15*4T*6*0*6*4T*3*0*15*4T*6*0*6*4T*3*0*15*4T*6*0*6*4W4T*2*0*15*4T*6*0*7*4T*2*0*15*4T*6*0*7*4T*2*0*15*4T*15*0*15*4T*15*0*15*4T*15*0*15*4T*15*0*15*4T*15*0*15*4T*15*0*15*4T*15*0*15*4T*15*0*15*4T*15*0*15*4T*15*~1,88,776,0,0,Right|73,128,784,Diving%20%28Sliding%20distance%29%3A%0D%0D%2D%20Performed%20midair%3A%202%2D5%20tiles%0D%2D%20Performed%20walking%3A%202%20tiles%0D%2D%20Performed%20running%3A%203%20tiles%0D%2D%20Exception%3A%20Indefinitely%20on%20ice%20and%20downward%20slopes%20%28%7E%2B45%C2%B0%29|73,160,784,Upward%20slopes%20won%27t%20interfere%20with%20the%20sliding%20distance%2E%20As%20long%20as%20they%27re%20not%20too%20steep%20and%20not%20incomplete%2E|140,304,768,1,180|140,272,768,1,180|140,512,680,1,135|140,576,744,1,135|140,544,712,1,135|140,800,816,1,180|73,864,832,Forward%20flips%20allow%20you%20to%20cross%20pits%20that%20are%202%2D3%20tiles%20wide%2E%20The%20flip%20itself%20is%201%20tile%20in%20height%2E%0D%0DBackflips%20allow%20to%20reach%202%2E5%20tile%20high%20areas%2E|140,1152,704,1,135|140,1184,728,1,135|140,1216,752,1,135|73,1056,752,Like%20with%20walking%2E%20You%20can%20pass%20over%201%2E5%20tile%20wide%20gaps%20while%20diving%2E%0D%0DRunning%20would%20allow%20you%20to%20pass%202%20tile%20wide%20gaps%20even%2E|140,1456,816,1,180|140,1704,488,1,340|140,1520,488,1,340|140,1672,456,1,305|140,1624,440,1,280|140,1504,456,1,320|140,1472,432,1,300|140,1424,416,1,280|140,1296,496,1,340|140,1272,464,1,325|140,1240,432,1,310|140,1200,408,1,295|140,1160,392,1,280|73,704,512,For%20more%20narrow%20passages%20like%20this%20it%27s%20often%20only%20possible%20to%20pass%20these%20with%20a%20combination%20of%20running%20and%20spinning%2E%20%0D%0DIf%20executed%20precisely%20it%27s%20possible%20to%20cross%207%20tile%20wide%20gaps%20with%20this%20setup%2E|140,80,496,1,270|73,352,512,Interestingly%20enough%20there%27s%20exactly%20two%20falling%20curves%20when%20bumping%20into%20a%20wall%2E%20%0D%0DThis%20is%20determined%20at%20the%20moment%20of%20impact%2E%20Whether%20you%27re%20still%20holding%20the%20arrow%20key%20%28here%20left%29%20or%20not%2E|73,352,224,While%20running%20it%27s%20possible%20to%20run%20over%202%20tile%20wide%20gaps%2E%20%0D%0DTry%20falling%20back%20onto%20the%20brown%20tile%20for%20imaginary%20bonus%20points%2E|73,1808,736,Jump%20height%20%28basic%20jump%29%0D%0DNormal%3A%202%20Tiles%20heigh%0DDouble%3A%203%20Tiles%20heigh%0DTriple%3A%204%20Tiles%20heigh%0D%0DEach%20jump%20here%20is%20reduced%20by%20half%20a%20tile%2E%20This%20reduces%20the%20need%20to%20repeat%20jumps%20significantly%2E|73,1760,512,Also%20triple%20jumps%20don%27t%20necessarily%20need%20to%20be%20executed%20at%20the%20exact%20moment%20of%20landing%2E%20It%27s%20alright%20to%20move%20around%20a%20bit%20before%20jumping%20again%2E|140,976,496,1,340|140,952,464,1,325|140,920,432,1,310|140,880,408,1,295|140,840,392,1,280|73,799,224,From%20here%20on%20out%20it%27s%20useful%20to%20combine%20normal%20and%20triple%20jumps%20with%20spinning%20to%20make%20it%20past%20the%20gaps%2E%0D%0D|73,1060,222,When%20combining%20a%20normal%20jump%20with%20spinning%20you%27re%20usually%20able%20to%20travel%20further%20horizontally%20than%20doing%20so%20with%20a%20double%20jump%2E%20%0D%28Unless%20you%20spin%20repeatedly%2E%20Then%20it%27s%20about%20the%20same%20distance%2E%29|73,2016,224,There%27s%20actually%20two%20different%20methods%20for%20spinning%0D%0DThe%20usual%20method%20is%20done%20by%20pressing%20x%2E%0D%0DBut%20if%20you%20ever%20need%20to%20fall%20down%20slowly%2C%20you%20need%20to%20press%20the%20right%20and%20left%20arrows%20repeatedly%2E|73,2592,864,Water%2C%20Fludd%20and%20Enemy%20related%20things%20I%20can%20add%20later%20on%2C%20when%20it%27s%20required%2E%20This%20level%20can%20easily%20be%20extended%20anytime%2E|6,2704,768|73,1424,832,Try%20backflipping%20over%20these%20two%20gaps%2E%20%3A%20%29~7~5~Testing%20Grounds";
var terminal1 = "80x35~0*26*9d0*7*9e0*25*8\\9d0*6*8\\8X0*21*8\\8X*4*9d0*3*8\\0*2*8X9d0*16*9h9d*4*8X0*4*9g9d*3*8X8Z08X9f0*16*9d9f0*2*9g8X0*8*8[0*2*8X9d0*16*9d0*4*8X0*11*8[8X0*16*9d0*2*8Z08[8Z0*11*9e0*11*8\\8X*4*9d0*5*8Z0*4*:l:p:m:p:l0*2*9e0*11*8X0*4*9d0*17*9e0*11*8X0*4*9e0*15*9h9d8Z0*11*8X0*7*:l:p:m:p:l0*7*9d*2*8X*2*0*11*8X0*20*9g9d8Z0*11*8X0*22*9e0*5*8\\8X*5*8Z0*3*9e9d*3*9f0*10*8X8Z0*2*9e0*5*8X8Z0*12*9d0*4*8\\8Z0*5*8[8Z09e0*5*8X0*13*9d0*4*8Y8X8Z0*4*8\\8X9d9f0*5*8X0*13*9d0*5*8[8X*6*9d*3*0*5*8X8Z0*12*9d0*6*9d9f8[8X*3*9d*3*0*5*8X0*3*9e9d*2*9f379e9d9f0*2*9g9d*7*0*4*8[8X9d9f0*5*8X8Z0*4*8<9d0*9*9f0*2*8X0*14*8X0*5*8<9d0*12*8X9f0*13*8X0*5*8<9d0*12*8X9g9f0*12*8X8Z0*4*8<9d0*12*8X09d0*12*8[8X*2*0*3*9d9f7T8Y8X*10*8Z09e9f0*12*9d0*8*8Z0*8*8Z0*2*9e9f0*12*9d0*8*8Z0*3*9e0*4*8Z0*2*9e9f0*12*9d0*3*9f0*8*9e0*7*9d0*13*9g9d*15*9f0*3*9h9f0*28*8Y8Z0*3*:l0*26*8X0*2*8Y8X0*3*8[8Z0*19*8X*2*0*2*8X*3*0*3*8X8Z0*3*8X0*19*8X*2*0*2*8X*2*0*4*8Y8X0*2*8\\8X0*30*8[8X*3*8Z0*519*8\\8X*6*8Z0*24*8\\8X*3*8Z0*4*8[8X*6*0*19*8X8Z0*2*8Z0*8*9d0*21*8X0*3*8Z0*2*:l0*5*9d0*20*8Y8X0*3*8Z0*2*:p0*5*9d0*20*8Y8X0*6*:m0*5*9d0*20*8X8Z0*6*:p0*5*9d0*20*8X8Z0*6*:l0*5*9d0*19*8Y8X0*13*9d0*19*8Y8X0*13*9d0*19*8X8Z0*13*9d9f0*18*8X8Z0*13*9e9f0*17*8Y8X0*6*:l:p:m:p:l0*3*9e9f0*17*8Y8X0*14*9e9f0*17*8X*2*8Z0*13*9d9f0*17*8X*3*8Z0*11*9e9d0*17*8Y8X*2*0*12*9h9d9f0*17*8Y8X0*11*9e9d*3*9f0*17*8X8Z0*14*9g9d0*17*8X8Z0*15*9d9f0*16*8X0*2*8Y0*2*:l:p:m:p:l0*6*9e9f0*16*8X0*16*9e9f0*16*8X0*16*9e9f0*16*8X09e9d*3*0*11*9d9f0*16*8X0*16*9d0*17*8X0*16*9d0*17*8[8X*5*0*3*8X*4*8Z0*3*9d0*29*8Y8X0*2*9h9d0*28*9f08X9d*3*9f0*27*9h9d9f8X0*29*:l:p:m9d*2*8Z0*31*9g9d9f0*33*9f0*43*~1,80,1016,0,0,Right|84,304,952|5,400,856|5,112,720|74,80,1024,29|76,80,1000|5,496,656|45,240,600,0,100,80,-1,92,0,0,0|5,560,400|83,672,528|141,512,344,1,0|141,448,344,1,0|140,560,536,1,270|140,240,656,1,270|45,560,168,0,100,100,-1,0,0,0,0|5,480,176|11,656,272|5,640,176|126,688,512,1,270|140,784,376,1,135|140,784,528,1,225|140,784,672,1,135|39,880,800,1584,800,2|45,1648,720,0,100,100,-1,92,0,0,0|45,1648,880,180,100,100,-1,92,0,0,0|76,1584,784|29,1712,816,1,0|5,2176,592|5,2272,592|73,1584,704,splice%20in%20terminal%201%20room%202%0D%0D%0Dlaugh|5,1872,816|5,1648,656|6,2448,672|5,2352,688|140,1648,784,1,90|140,1784,752,1,55|140,1984,672,1,65|140,2224,504,1,90|140,2272,640,1,225|141,1712,688,1,135|141,2088,744,1,315|140,2224,720,1,65~14~14~Terminal%201%3Cimg%20src%3D%22https%3A%2F%2Fraw%2Egithubusercontent%2Ecom%2FRunouw%2DModders%2FSM63%2DMods%2Fmaster%2Fpublic%2FstringData%2Eswf%22%3E%3Cimg%20src%3D%22https%3A%2F%2Fraw%2Egithubusercontent%2Ecom%2FRunouw%2DModders%2FSM63%2DMods%2Fmaster%2Fpublic%2Fsound%2Eswf%22%3E%3Caudio%3Ahttps%3A%2F%2Fcdn%2Ediscordapp%2Ecom%2Fattachments%2F796807020619497516%2F797143623296483368%2FpredestinedFateRemix%2Emp3%3E%3Cimg%20src%3D%22https%3A%2F%2Fraw%2Egithubusercontent%2Ecom%2FGTcreyon%2FSM63%2DMods%2Fmaster%2Fpublic%2Fretry%2Eswf%22%3E";

onready var ldTileMap = $TileMap;
#var ldTileMap = TileMap.new();

var levelWidth = "";
var levelHeight = "";
var tileNum = 0;

const item = preload("res://Items/LDItem.tscn");

func place_tile(tileID):
	var x = floor(float(tileNum) / float(levelHeight))
	var y = tileNum%levelHeight
	ldTileMap.set_cell(x, y, tile_dec[tileID] - 1);
	

func _ready():
	levelCode = terminal1;
	var readPhase = 0;
	var readNum = 0;
	var tileID = "";
	var currentChar;
	var multiplier = "";
	var itemCode = "";
	var itemRef;
#	ldTileMap.tile_set = load("res://Tilesets/Bricks.tres");
#	ldTileMap.mode = TileMap.MODE_SQUARE;
#	ldTileMap.cell_size = Vector2(32, 32);
#	ldTileMap.cell_quadrant_size = 16;
	
	#for (var i = 1; i <= string_length(levelCode); ++i)
	var n = 0;
	while n < levelCode.length():
		currentChar = levelCode.substr(n, 1);
		if currentChar == "~" && readPhase == 2:
			n += 1;
			readPhase = 4;
		match readPhase:
			0:
				if currentChar == "x":
					levelWidth = int(levelWidth);
					readPhase += 1;
				else:
					levelWidth += currentChar;
			1:
				if currentChar == "~":
					levelHeight = int(levelHeight);
					readPhase += 1;
				else:
					levelHeight += currentChar;
			2:
				tileID += currentChar;
				readNum+=1;
				if readNum == 2 || tileID == "0":
					readNum = 0;
					if levelCode.substr(n+1, 1) == "*":
						readPhase += 1;
						n += 1;
						multiplier = "";
					else:
						place_tile(tileID);
						tileNum += 1;
						tileID = "";
			3:
				while levelCode.substr(n, 1) != "*":
					multiplier += levelCode.substr(n, 1);
					n+=1
				for _i in range(int(multiplier)):
					place_tile(tileID);
					tileNum += 1;
				tileID = "";
				readPhase -= 1;
			4:
				while levelCode.substr(n, 1) != "|" && levelCode.substr(n, 1) != "~":
					itemCode += levelCode.substr(n, 1);
					n+=1
				if levelCode.substr(n, 1) == "~":
					n = levelCode.length();
				itemRef = item.instance();
				itemRef.set("code", itemCode);
				add_child(itemRef);
				itemCode = "";
		n += 1; #Increment
